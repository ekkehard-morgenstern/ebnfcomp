--------------------------------------------------------------------------------------------
--    EBNF Compiler                                                                       --
--    Copyright (C) 2019  Ekkehard Morgenstern                                            --
--                                                                                        --
--    This program is free software: you can redistribute it and/or modify                --
--    it under the terms of the GNU General Public License as published by                --
--    the Free Software Foundation, either version 3 of the License, or                   --
--    (at your option) any later version.                                                 --
--                                                                                        --
--    This program is distributed in the hope that it will be useful,                     --
--    but WITHOUT ANY WARRANTY; without even the implied warranty of                      --
--    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                       --
--    GNU General Public License for more details.                                        --
--                                                                                        --
--    You should have received a copy of the GNU General Public License                   --
--    along with this program.  If not, see <https://www.gnu.org/licenses/>.              --
--                                                                                        --
--    Contact Info:                                                                       --
--    E-Mail: ekkehard@ekkehardmorgenstern.de                                             --
--    Mail: Ekkehard Morgenstern, Mozartstr. 1, 76744 Woerth am Rhein, Germany, Europe    --
--------------------------------------------------------------------------------------------

TOKEN hexadecimal := /\$[0-9a-fA-F]+/ .

TOKEN identifier  := /[a-z0-9-]+/ .
TOKEN str-literal := /'[^']+'/ | /"[^"]+"/ .

-- during parsing of regular expressions, whitespace skipping will be disabled
TOKEN re-any      := '.' .
TOKEN re-chr      := '\' /./ | /[^\/.*?[(|]/ .

TOKEN re-cc-chr   := '\' /./ | /[^\\\]]/ .
TOKEN re-cc-rng   := re-cc-chr '-' re-cc-chr .
TOKEN re-cc-item  := re-cc-rng | re-cc-chr .
TOKEN re-cc-items := re-cc-item { re-cc-item } .
TOKEN re-cc       := '[' [ '^' ] re-cc-items ']' .

TOKEN re-base-expr   := re-cc | re-chr | re-any | '(' regex ')' .
TOKEN re-repeat-expr := re-base-expr [ '+' | '*' | '?' ] .
TOKEN re-and-expr    := re-repeat-expr { re-repeat-expr } .
TOKEN re-or-expr     := re-and-expr { '|' re-and-expr } .
TOKEN regex          := re-or-expr .

bin-field-type := 'BYTE' | 'WORD' | 'DWORD' | 'QWORD' .

bin-match   := hexadecimal | bin-field-type [ ':' identifier |
             '*' identifier ]  .

base-expr   := identifier | str-literal | regex | bin-match |
               '(' expr ')' | '[' expr ']' | '{' expr '}' .
and-expr    := base-expr { base-expr } .
or-expr     := and-expr { '|' and-expr } .
expr        := or-expr .

production  := [ 'TOKEN' ] identifier ':=' expr '.' .
prod-list   := production { production } .
